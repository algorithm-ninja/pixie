var searchIndex = new Map(JSON.parse('[\
["pixie_server",{"doc":"","t":"FNNNNNNCHHNNNNNCNHCCOCNNNCNNNFNNONNHNHNNNNNHHHHHHHHFNNHNNOONNHOONONONNNONHHHHHHHH","n":["PixieOptions","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","dnsmasq","find_mac","find_network","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","http","into","main","ping","state","storage_dir","tcp","try_from","try_into","type_id","udp","update_from_arg_matches","update_from_arg_matches_mut","vzip","DnsmasqHandle","borrow","borrow_mut","child","drop","from","get_hosts","into","main","reload","try_from","try_into","type_id","vzip","write_config","write_hosts","action","gc","image","main","ws","main","State","add_chunk","add_image","atomic_write","borrow","borrow_mut","chunk_stats","config","from","gc_chunks","get_image_csize","hostmap","image_stats","into","last","load","storage_dir","try_from","try_into","type_id","units","vzip","handle_connection","handle_request","main","broadcast_chunks","broadcast_hint","compute_hint","handle_requests","main"],"q":[[0,"pixie_server"],[29,"pixie_server::dnsmasq"],[45,"pixie_server::http"],[50,"pixie_server::ping"],[51,"pixie_server::state"],[73,"pixie_server::tcp"],[76,"pixie_server::udp"],[81,"clap_builder::builder::command"],[82,"core::net::ip_addr"],[83,"macaddr::addr6"],[84,"anyhow"],[85,"ipnet::ipnet"],[86,"core::fmt"],[87,"core::fmt"],[88,"clap_builder"],[89,"core::result"],[90,"clap_builder::util::id"],[91,"core::option"],[92,"core::any"],[93,"pixie_shared::config"],[94,"alloc::string"],[95,"alloc::vec"],[96,"alloc::sync"],[97,"axum::extract::path"],[98,"axum::extract::state"],[99,"axum_core::response::into_response"],[100,"axum::extract::ws"],[101,"axum_core::response"],[102,"pixie_shared"],[103,"pixie_shared"],[104,"std::path"],[105,"core::net::socket_addr"],[106,"pixie_shared"],[107,"tokio::sync::mpsc::bounded"],[108,"pixie_shared"]],"d":["","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Directory in which files will be stored. Must already …","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,6,6,6,6,6,6,0,0,0,6,6,6,6,6,0,6,0,0,0,6,0,6,6,6,0,6,6,6,0,16,16,16,16,16,0,16,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,17,17,0,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0],"f":"`{bb}0{ce{}{}}0{{}b}0`{d{{h{f}}}}{d{{h{j}}}}{{ln}A`}{cc{}}{Ab{{Af{lAd}}}}0{{}{{Aj{Ah}}}}`7{{}{{h{Al}}}}````{c{{Af{e}}}{}{}}0{cAn{}}`{{lAb}{{Af{AlAd}}}}0;`;;`{B`Al}7{{Bb{Bf{Bd}}}{{Bl{{Bj{fd{Aj{Bh}}}}}}}}={{{Bn{Bb}}}{{h{Al}}}}{B`{{h{Al}}}}665?{Bb{{h{Al}}}}{{Bb{Bf{{Bj{fd{Aj{Bh}}}}}}}{{h{Al}}}}{{{C`{{Bj{BhBh}}}}{Cb{{Bn{Bb}}}}}{{`{Cd}}}}{{{Cb{{Bn{Bb}}}}}Bh}15{{{Cb{{Bn{Bb}}}}Cf}Ch}4`{{BbCj{Bf{Cl}}}{{h{Al}}}}{{BbBhCn}{{h{Al}}}}{{D`{Bf{Cl}}}{{h{Al}}}}{ce{}{}}0``{cc{}}9{CnDb}``2`{Dd{{h{Bb}}}}`{c{{Af{e}}}{}{}}0{cAn{}}`5{{{Bn{Bb}}DfDh}{{h{Al}}}}{{BbDjf}{{h{{Bl{Cl}}}}}}{{{Bn{Bb}}}{{h{Al}}}}{{BbDld{E`{{Dn{Cl}}}}}{{h{Al}}}}{{BbDld}{{h{Al}}}}{Bb{{h{Eb}}}}{{BbDl{Ed{{Dn{Cl}}}}}{{h{Al}}}}{Bb{{h{Al}}}}","c":[],"p":[[5,"Command",81],[5,"Ipv4Addr",82],[5,"MacAddr6",83],[8,"Result",84],[5,"Ipv4Net",85],[5,"PixieOptions",0],[5,"Formatter",86],[8,"Result",86],[5,"ArgMatches",87],[8,"Error",88],[6,"Result",89],[5,"Id",90],[6,"Option",91],[1,"unit"],[5,"TypeId",92],[5,"DnsmasqHandle",29],[5,"State",51],[5,"Unit",93],[1,"slice"],[5,"String",94],[1,"tuple"],[5,"Vec",95],[5,"Arc",96],[5,"Path",97],[5,"State",98],[10,"IntoResponse",99],[5,"WebSocketUpgrade",100],[8,"Response",101],[8,"ChunkHash",102],[1,"u8"],[5,"Image",102],[5,"Path",103],[1,"u64"],[5,"PathBuf",103],[5,"TcpStream",104],[6,"SocketAddr",105],[6,"TcpRequest",102],[5,"UdpSocket",106],[1,"array"],[5,"Receiver",107],[5,"Station",102],[5,"Sender",107]],"b":[]}],\
["pixie_shared",{"doc":"","t":"SGPPFSESFIFPPPPPSFPFFPIISPPPPPPFGGPPPPGCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNOOOOONNNNNNNNNNNOOONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOFNNNNNNNNNNNNNNNNNNNNNGFFFGFFPPPPPPFPOONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNOOOONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNO","n":["ACTION_PORT","Action","ActionComplete","ActionProgress","Address","BODY_LEN","Bijection","CHUNK_SIZE","Chunk","ChunkHash","ChunkStat","Config","Discover","GetAction","GetChunkSize","GetImage","HEADER_LEN","HintPacket","HostMap","Image","ImageStat","ImageStats","Ip","Offset","PACKET_LEN","Pull","Push","Reboot","Register","Register","RequestChunks","Station","TcpRequest","UdpRequest","Units","UploadChunk","UploadImage","Wait","WsUpdate","bijection","boot_entry","boot_option_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","col","config","csize","csize","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disk","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","group","groups","hash","image","images","images","into","into","into","into","into","into","into","into","into","into","into","ip","port","reclaimable","ref_cnt","row","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size","start","station","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_csize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","chunks_port","hint_port","image","image","Bijection","as_slice","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","fmt","from","get_by_first","get_by_second","into","into_iter","iter","new","serialize","to_owned","try_from","try_into","type_id","ActionKind","BootConfig","Config","DhcpConfig","DhcpMode","HostsConfig","HttpConfig","Proxy","Pull","Push","Reboot","Register","Static","Unit","Wait","bits_per_second","boot","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunks_port","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","col","curr_action","curr_progress","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dhcp","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","group","groups","hint_port","hosts","hostsfile","http","image","images","interface","into","into","into","into","into","into","into","into","last_ping_msg","last_ping_timestamp","listen_on","mac","mode","next_action","password","row","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","static_ip","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unregistered"],"q":[[0,"pixie_shared"],[208,"pixie_shared::Action"],[212,"pixie_shared::bijection"],[234,"pixie_shared::config"],[391,"core::result"],[392,"serde::de"],[393,"core::fmt"],[394,"core::fmt"],[395,"core::any"],[396,"core::cmp"],[397,"core::clone"],[398,"serde::de"],[399,"core::iter::traits::iterator"],[400,"serde::ser"],[401,"core::net::ip_addr"]],"d":["","","","","","","","","Describes one chunk from a disk.","The hash of a chunk of a disk.","","","","","","","","","","An image is given by the list of chunks of the disk, the …","","","","The offset of the chunk of a disk.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compressed size","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","size and csize","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Registered clients will always be assigned an IP in the …","","","","Unknown clients are assumed to receive an IP address by …","","","","","Unknown clients will be assigned IPs in the specified …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Hosts file to use for DHCP hostnames.","","","","Name of the interface on which clients are reachable.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","IP behaviour of unregistered clients and while running …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,10,9,0,0,0,0,0,0,0,11,9,10,10,10,0,0,11,0,0,11,0,0,0,8,8,8,8,10,9,0,0,0,11,10,10,8,0,0,2,2,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,5,0,1,4,5,7,1,2,3,4,5,6,7,8,9,10,11,2,3,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,5,6,1,5,3,6,1,2,3,4,5,6,7,8,9,10,11,7,7,3,4,5,1,2,3,4,5,6,7,8,9,10,11,1,1,6,1,2,3,4,5,6,7,8,9,10,11,3,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,44,45,46,44,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,32,36,36,36,36,32,0,36,35,38,32,33,34,35,36,37,38,39,32,33,34,35,36,37,38,39,35,32,33,34,35,36,37,38,39,32,33,34,35,36,37,38,39,39,39,39,37,32,33,34,35,36,37,38,39,38,32,33,34,35,36,37,38,39,32,33,34,35,36,36,37,38,39,32,33,34,35,36,37,38,39,36,39,38,35,38,33,38,39,38,33,32,33,34,35,36,37,38,39,39,39,34,39,33,39,34,39,32,33,34,35,36,37,38,39,39,32,33,34,35,36,37,38,39,36,32,33,34,35,36,37,38,39,32,33,34,35,36,37,38,39,32,33,34,35,36,37,38,39,37],"f":"``````````````````````````````````````````{ce{}{}}000000000000000000000{bb}{dd}{ff}{hh}{jj}{ll}{nn}{A`A`}{AbAb}{AdAd}{AfAf}{{ce}Ah{}{}}0000000000````{{}j}{{}n}{c{{Aj{b}}}Al}{c{{Aj{d}}}Al}{c{{Aj{f}}}Al}{c{{Aj{h}}}Al}{c{{Aj{j}}}Al}{c{{Aj{l}}}Al}{c{{Aj{n}}}Al}{c{{Aj{A`}}}Al}{c{{Aj{Ab}}}Al}{c{{Aj{Ad}}}Al}{c{{Aj{Af}}}Al}`{{ff}An}{{bB`}Bb}{{dB`}Bb}{{fB`}Bb}{{hB`}Bb}{{jB`}Bb}{{lB`}Bb}{{nB`}Bb}{{A`B`}Bb}{{AbB`}Bb}{{AdB`}Bb}{{AfB`}Bb}{cc{}}0000000000``````{ce{}{}}0000000000`````{{bc}AjBd}{{dc}AjBd}{{fc}AjBd}{{hc}AjBd}{{jc}AjBd}{{lc}AjBd}{{nc}AjBd}{{A`c}AjBd}{{Abc}AjBd}{{Adc}AjBd}{{Afc}AjBd}```;;;;;;;;;;;`{c{{Aj{e}}}{}{}}000000000000000000000{cBf{}}0000000000`````{{{Bh{ce}}}{{Bl{{Bj{ce}}}}}BnBn}>>{{{Bh{ce}}}{{Bh{ce}}}C`C`}{{ce}Ah{}{}}{{}{{Bh{ce}}}{}{}}{c{{Aj{{Bh{eg}}}}}AlCbCb}{{{Bh{ce}}{Bh{ce}}}An{BnC`Cd}{BnC`Cd}}{{{Bh{ce}}B`}BbCfCf}{cc{}}{{{Bh{ce}}c}{{Ch{e}}}BnBn}{{{Bh{ce}}e}{{Ch{c}}}BnBn}{ce{}{}}{{{Bh{ce}}}g{}{}{}}{{{Bh{ce}}}{{`{{Cl{}{{Cj{{Bj{ce}}}}}}}}}BnBn}{{}{{Bh{ce}}}BnBn}{{{Bh{ce}}g}AjCnCnBd}4{c{{Aj{e}}}{}{}}0{cBf{}}`````````````````6666666666666666`{D`D`}{DbDb}{DdDd}{DfDf}{DhDh}{DjDj}{DlDl}{DnDn}{{ce}Ah{}{}}0000000````{c{{Aj{D`}}}Al}{c{{Aj{Db}}}Al}{c{{Aj{Dd}}}Al}{c{{Aj{Df}}}Al}{c{{Aj{Dh}}}Al}{c{{Aj{Dj}}}Al}{c{{Aj{Dl}}}Al}{c{{Aj{Dn}}}Al}`{{D`D`}An}{{DbDb}An}{{DdDd}An}{{DfDf}An}{{DhDh}An}{{DjDj}An}{{DlDl}An}{{DnDn}An}{{D`B`}Bb}{{DbB`}Bb}{{DdB`}Bb}{{DfB`}Bb}{{DhB`}{{Aj{AhE`}}}}{{DhB`}Bb}{{DjB`}Bb}{{DlB`}Bb}{{DnB`}Bb}{cc{}}0000000{Eb{{Aj{DhEd}}}}`````````{ce{}{}}0000000````````{{D`c}AjBd}{{Dbc}AjBd}{{Ddc}AjBd}{{Dfc}AjBd}{{Dhc}AjBd}{{Djc}AjBd}{{Dlc}AjBd}{{Dnc}AjBd}{DnEf}99999999{cEd{}}{c{{Aj{e}}}{}{}}000000000000000{cBf{}}0000000`","c":[],"p":[[5,"Chunk",0],[5,"Image",0],[5,"ImageStat",0],[5,"ChunkStat",0],[5,"Station",0],[5,"HintPacket",0],[5,"Address",0],[6,"Action",0],[6,"UdpRequest",0],[6,"TcpRequest",0],[6,"WsUpdate",0],[1,"unit"],[6,"Result",391],[10,"Deserializer",392],[1,"bool"],[5,"Formatter",393],[8,"Result",393],[10,"Serializer",394],[5,"TypeId",395],[5,"Bijection",212],[1,"tuple"],[1,"slice"],[10,"PartialEq",396],[10,"Clone",397],[10,"Deserialize",392],[10,"Ord",396],[10,"Debug",393],[6,"Option",398],[17,"Item"],[10,"Iterator",399],[10,"Serialize",394],[6,"DhcpMode",234],[5,"DhcpConfig",234],[5,"HttpConfig",234],[5,"HostsConfig",234],[6,"ActionKind",234],[5,"BootConfig",234],[5,"Config",234],[5,"Unit",234],[5,"Error",393],[1,"str"],[5,"String",400],[5,"Ipv4Addr",401],[15,"Pull",208],[15,"Register",208],[15,"Push",208]],"b":[[309,"impl-Display-for-ActionKind"],[310,"impl-Debug-for-ActionKind"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
